{"ast":null,"code":"var _jsxFileName = \"/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../api/axiosInstance\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5001\"); // Adjust to your backend URL\n\nconst ChatPage = ({\n  currentUserId\n}) => {\n  _s();\n  const {\n    receiverId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const chatBoxRef = useRef(null);\n\n  // Fetch initial chat history\n  const fetchMessages = useCallback(async () => {\n    try {\n      const {\n        data\n      } = await API.get(`/chats/history/${currentUserId}/${receiverId}`);\n      setMessages(data);\n      // Mark messages as seen if they’re from the receiver\n      const unseenMessages = data.filter(msg => msg.sender === receiverId && !msg.seen);\n      for (const msg of unseenMessages) {\n        await API.post(`/chats/seen/${msg._id}`);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch messages:\", err);\n    }\n  }, [currentUserId, receiverId]);\n\n  // Initial fetch and Socket.IO setup\n  useEffect(() => {\n    if (!currentUserId || !receiverId) return;\n\n    // Fetch initial messages\n    fetchMessages();\n\n    // Join chat room\n    socket.emit(\"joinChat\", {\n      senderId: currentUserId,\n      receiverId\n    });\n\n    // Listen for new messages\n    socket.on(\"message\", newMessage => {\n      setMessages(prev => {\n        // Avoid duplicates\n        if (!prev.some(msg => msg._id === newMessage._id)) {\n          return [...prev, newMessage];\n        }\n        return prev;\n      });\n      // Mark as seen if the message is from the receiver\n      if (newMessage.sender === receiverId) {\n        API.post(`/chats/seen/${newMessage._id}`).catch(err => console.error(\"Error marking as seen:\", err));\n      }\n    });\n\n    // Cleanup\n    return () => {\n      socket.off(\"message\");\n    };\n  }, [currentUserId, receiverId, fetchMessages]);\n\n  // Scroll to the bottom when messages update\n  useEffect(() => {\n    var _chatBoxRef$current;\n    (_chatBoxRef$current = chatBoxRef.current) === null || _chatBoxRef$current === void 0 ? void 0 : _chatBoxRef$current.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!text && !image) return;\n    const messageData = {\n      sender: currentUserId,\n      receiver: receiverId\n    };\n    if (text) messageData.text = text;\n    if (image) {\n      const formData = new FormData();\n      formData.append(\"sender\", currentUserId);\n      formData.append(\"receiver\", receiverId);\n      if (text) formData.append(\"text\", text);\n      formData.append(\"image\", image);\n      try {\n        const {\n          data\n        } = await API.post(\"/chats/send\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        socket.emit(\"sendMessage\", data); // Emit the saved message\n      } catch (err) {\n        console.error(\"Failed to send image message:\", err);\n        return;\n      }\n    } else {\n      socket.emit(\"sendMessage\", messageData); // Send text-only message\n    }\n    setText(\"\");\n    setImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[500px] overflow-y-scroll border p-4 mb-4 bg-white rounded\",\n      ref: chatBoxRef,\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 ${msg.sender === currentUserId ? \"text-right\" : \"text-left\"}`,\n        children: [msg.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.image.startsWith(\"http\") ? msg.image : `http://localhost:5001${msg.image}`,\n          alt: \"sent-img\",\n          className: \"inline-block max-w-xs mb-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), msg.text && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `inline-block p-2 rounded-lg ${msg.sender === currentUserId ? \"bg-blue-500 text-white\" : \"bg-gray-200 text-gray-800\"}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: [new Date(msg.timestamp).toLocaleTimeString(), \" \", msg.sender === currentUserId && msg.seen ? \"(Seen)\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"flex-1 border p-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0]),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"WXALbAncc/greE1y2HZ+b9Z9jWI=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","useParams","API","io","jsxDEV","_jsxDEV","socket","ChatPage","currentUserId","_s","receiverId","messages","setMessages","text","setText","image","setImage","chatBoxRef","fetchMessages","data","get","unseenMessages","filter","msg","sender","seen","post","_id","err","console","error","emit","senderId","on","newMessage","prev","some","catch","off","_chatBoxRef$current","current","scrollTo","top","scrollHeight","behavior","handleSend","e","preventDefault","messageData","receiver","formData","FormData","append","headers","className","children","ref","map","src","startsWith","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","timestamp","toLocaleTimeString","onSubmit","type","value","onChange","target","placeholder","accept","files","_c","$RefreshReg$"],"sources":["/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../api/axiosInstance\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:5001\"); // Adjust to your backend URL\n\nconst ChatPage = ({ currentUserId }) => {\n  const { receiverId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const chatBoxRef = useRef(null);\n\n  // Fetch initial chat history\n  const fetchMessages = useCallback(async () => {\n    try {\n      const { data } = await API.get(`/chats/history/${currentUserId}/${receiverId}`);\n      setMessages(data);\n      // Mark messages as seen if they’re from the receiver\n      const unseenMessages = data.filter(\n        (msg) => msg.sender === receiverId && !msg.seen\n      );\n      for (const msg of unseenMessages) {\n        await API.post(`/chats/seen/${msg._id}`);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch messages:\", err);\n    }\n  }, [currentUserId, receiverId]);\n\n  // Initial fetch and Socket.IO setup\n  useEffect(() => {\n    if (!currentUserId || !receiverId) return;\n\n    // Fetch initial messages\n    fetchMessages();\n\n    // Join chat room\n    socket.emit(\"joinChat\", { senderId: currentUserId, receiverId });\n\n    // Listen for new messages\n    socket.on(\"message\", (newMessage) => {\n      setMessages((prev) => {\n        // Avoid duplicates\n        if (!prev.some((msg) => msg._id === newMessage._id)) {\n          return [...prev, newMessage];\n        }\n        return prev;\n      });\n      // Mark as seen if the message is from the receiver\n      if (newMessage.sender === receiverId) {\n        API.post(`/chats/seen/${newMessage._id}`).catch((err) =>\n          console.error(\"Error marking as seen:\", err)\n        );\n      }\n    });\n\n    // Cleanup\n    return () => {\n      socket.off(\"message\");\n    };\n  }, [currentUserId, receiverId, fetchMessages]);\n\n  // Scroll to the bottom when messages update\n  useEffect(() => {\n    chatBoxRef.current?.scrollTo({\n      top: chatBoxRef.current.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, [messages]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!text && !image) return;\n\n    const messageData = { sender: currentUserId, receiver: receiverId };\n    if (text) messageData.text = text;\n\n    if (image) {\n      const formData = new FormData();\n      formData.append(\"sender\", currentUserId);\n      formData.append(\"receiver\", receiverId);\n      if (text) formData.append(\"text\", text);\n      formData.append(\"image\", image);\n\n      try {\n        const { data } = await API.post(\"/chats/send\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        socket.emit(\"sendMessage\", data); // Emit the saved message\n      } catch (err) {\n        console.error(\"Failed to send image message:\", err);\n        return;\n      }\n    } else {\n      socket.emit(\"sendMessage\", messageData); // Send text-only message\n    }\n\n    setText(\"\");\n    setImage(null);\n  };\n\n  return (\n    <div className=\"p-4 max-w-3xl mx-auto\">\n      <div\n        className=\"h-[500px] overflow-y-scroll border p-4 mb-4 bg-white rounded\"\n        ref={chatBoxRef}\n      >\n        {messages.map((msg) => (\n          <div\n            key={msg._id}\n            className={`mb-4 ${\n              msg.sender === currentUserId ? \"text-right\" : \"text-left\"\n            }`}\n          >\n            {msg.image && (\n              <img\n                src={msg.image.startsWith(\"http\") ? msg.image : `http://localhost:5001${msg.image}`}\n                alt=\"sent-img\"\n                className=\"inline-block max-w-xs mb-2 rounded\"\n              />\n            )}\n            {msg.text && (\n              <p\n                className={`inline-block p-2 rounded-lg ${\n                  msg.sender === currentUserId\n                    ? \"bg-blue-500 text-white\"\n                    : \"bg-gray-200 text-gray-800\"\n                }`}\n              >\n                {msg.text}\n              </p>\n            )}\n            <div className=\"text-sm text-gray-500 mt-1\">\n              {new Date(msg.timestamp).toLocaleTimeString()}{\" \"}\n              {msg.sender === currentUserId && msg.seen ? \"(Seen)\" : \"\"}\n            </div>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSend} className=\"flex gap-2\">\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"flex-1 border p-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={(e) => setImage(e.target.files[0])}\n          className=\"border p-2 rounded\"\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\"\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}