{"ast":null,"code":"var _jsxFileName = \"/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/pages/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport API from \"../api/axiosInstance\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = ({\n  currentUserId\n}) => {\n  _s();\n  const {\n    receiverId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const chatBoxRef = useRef(null);\n\n  // ✅ fetchMessages wrapped with useCallback for stable reference\n  const fetchMessages = useCallback(async () => {\n    try {\n      const {\n        data\n      } = await API.get(`/chats/history/${currentUserId}/${receiverId}`);\n      setMessages(data);\n      // Mark all as seen if receiver is the current user\n      await API.post(\"/chats/mark-seen\", {\n        sender: receiverId,\n        receiver: currentUserId\n      });\n    } catch (err) {\n      console.error(\"Failed to fetch messages\");\n    }\n  }, [currentUserId, receiverId]);\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 3000); // Poll every 3s for real-time\n    return () => clearInterval(interval);\n  }, [fetchMessages]);\n  const handleSend = async () => {\n    if (!text && !image) return;\n    const formData = new FormData();\n    formData.append(\"sender\", currentUserId);\n    formData.append(\"receiver\", receiverId);\n    if (text) formData.append(\"text\", text);\n    if (image) formData.append(\"image\", image);\n    try {\n      await API.post(\"/chats/send\", formData);\n      setText(\"\");\n      setImage(null);\n      fetchMessages(); // ✅ Refetch after sending\n    } catch (err) {\n      console.error(\"Failed to send message\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[500px] overflow-y-scroll border p-4 mb-4 bg-white rounded\",\n      ref: chatBoxRef,\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 ${msg.sender === currentUserId ? \"text-right\" : \"text-left\"}`,\n        children: [msg.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.image,\n          alt: \"sent-img\",\n          className: \"inline-block max-w-xs mb-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), msg.text && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-500\",\n          children: [new Date(msg.timestamp).toLocaleTimeString(), \" \", msg.sender === currentUserId && msg.seen ? \"(Seen)\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"flex-1 border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setImage(e.target.files[0]),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"PPSllFs3KGFjnYso8SYXPyZQZLs=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","API","useParams","jsxDEV","_jsxDEV","ChatPage","currentUserId","_s","receiverId","messages","setMessages","text","setText","image","setImage","chatBoxRef","fetchMessages","data","get","post","sender","receiver","err","console","error","interval","setInterval","clearInterval","handleSend","formData","FormData","append","className","children","ref","map","msg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","timestamp","toLocaleTimeString","seen","_id","type","value","onChange","e","target","placeholder","files","onClick","_c","$RefreshReg$"],"sources":["/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/pages/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport API from \"../api/axiosInstance\";\nimport { useParams } from \"react-router-dom\";\n\nconst ChatPage = ({ currentUserId }) => {\n  const { receiverId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const chatBoxRef = useRef(null);\n\n  // ✅ fetchMessages wrapped with useCallback for stable reference\n  const fetchMessages = useCallback(async () => {\n    try {\n      const { data } = await API.get(`/chats/history/${currentUserId}/${receiverId}`);\n      setMessages(data);\n      // Mark all as seen if receiver is the current user\n      await API.post(\"/chats/mark-seen\", { sender: receiverId, receiver: currentUserId });\n    } catch (err) {\n      console.error(\"Failed to fetch messages\");\n    }\n  }, [currentUserId, receiverId]);\n\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 3000); // Poll every 3s for real-time\n    return () => clearInterval(interval);\n  }, [fetchMessages]);\n\n  const handleSend = async () => {\n    if (!text && !image) return;\n    const formData = new FormData();\n    formData.append(\"sender\", currentUserId);\n    formData.append(\"receiver\", receiverId);\n    if (text) formData.append(\"text\", text);\n    if (image) formData.append(\"image\", image);\n\n    try {\n      await API.post(\"/chats/send\", formData);\n      setText(\"\");\n      setImage(null);\n      fetchMessages(); // ✅ Refetch after sending\n    } catch (err) {\n      console.error(\"Failed to send message\");\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-3xl mx-auto\">\n      <div className=\"h-[500px] overflow-y-scroll border p-4 mb-4 bg-white rounded\" ref={chatBoxRef}>\n        {messages.map((msg) => (\n          <div\n            key={msg._id}\n            className={`mb-4 ${msg.sender === currentUserId ? \"text-right\" : \"text-left\"}`}\n          >\n            {msg.image && (\n              <img src={msg.image} alt=\"sent-img\" className=\"inline-block max-w-xs mb-2 rounded\" />\n            )}\n            {msg.text && <p>{msg.text}</p>}\n            <span className=\"text-sm text-gray-500\">\n              {new Date(msg.timestamp).toLocaleTimeString()}{\" \"}\n              {msg.sender === currentUserId && msg.seen ? \"(Seen)\" : \"\"}\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className=\"flex gap-2\">\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"flex-1 border p-2 rounded\"\n        />\n        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} className=\"border p-2 rounded\" />\n        <button onClick={handleSend} className=\"bg-blue-500 text-white px-4 py-2 rounded\">Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}