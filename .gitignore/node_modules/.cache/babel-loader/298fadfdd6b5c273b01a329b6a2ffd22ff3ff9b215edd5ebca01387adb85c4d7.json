{"ast":null,"code":"// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(() => {\n  const fetchDebate = async () => {\n    try {\n      const {\n        data\n      } = await API.get(`/debates/${id}`);\n      setDebate(data);\n      setComments(data.comments || []);\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        const userId = JSON.parse(atob(token.split(\".\")[1])).userId;\n        const userComments = data.comments.filter(c => c.user._id === userId);\n        if (userComments.length > 0) {\n          setUserStanceLocked(userComments[0].stance);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching debate:\", error);\n      setError(\"Failed to load debate.\");\n    }\n  };\n  setLoading(true);\n  fetchDebate().finally(() => setLoading(false));\n  const intervalId = setInterval(async () => {\n    try {\n      const {\n        data\n      } = await API.get(`/debates/${id}`);\n      const newComments = data.comments || [];\n      const existingCommentIds = new Set(comments.map(c => c._id));\n      const commentsToAdd = newComments.filter(c => !existingCommentIds.has(c._id));\n      if (commentsToAdd.length > 0) {\n        setComments(prevComments => [...prevComments, ...commentsToAdd]);\n      }\n    } catch (error) {\n      console.error(\"Error polling comments:\", error);\n    }\n  }, 5000);\n  return () => clearInterval(intervalId);\n}, [id]);","map":{"version":3,"names":["useEffect","fetchDebate","data","API","get","id","setDebate","setComments","comments","token","localStorage","getItem","userId","JSON","parse","atob","split","userComments","filter","c","user","_id","length","setUserStanceLocked","stance","error","console","setError","setLoading","finally","intervalId","setInterval","newComments","existingCommentIds","Set","map","commentsToAdd","has","prevComments","clearInterval"],"sources":["/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/pages/DebatePage.js"],"sourcesContent":["// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(() => {\n  const fetchDebate = async () => {\n    try {\n      const { data } = await API.get(`/debates/${id}`);\n      setDebate(data);\n      setComments(data.comments || []);\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        const userId = JSON.parse(atob(token.split(\".\")[1])).userId;\n        const userComments = data.comments.filter((c) => c.user._id === userId);\n        if (userComments.length > 0) {\n          setUserStanceLocked(userComments[0].stance);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching debate:\", error);\n      setError(\"Failed to load debate.\");\n    }\n  };\n\n  setLoading(true);\n  fetchDebate().finally(() => setLoading(false));\n\n  const intervalId = setInterval(async () => {\n    try {\n      const { data } = await API.get(`/debates/${id}`);\n      const newComments = data.comments || [];\n      const existingCommentIds = new Set(comments.map((c) => c._id));\n      const commentsToAdd = newComments.filter((c) => !existingCommentIds.has(c._id));\n\n      if (commentsToAdd.length > 0) {\n        setComments((prevComments) => [...prevComments, ...commentsToAdd]);\n      }\n    } catch (error) {\n      console.error(\"Error polling comments:\", error);\n    }\n  }, 5000);\n\n  return () => clearInterval(intervalId);\n}, [id]);"],"mappings":"AAAA;AACAA,SAAS,CAAC,MAAM;EACd,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,YAAYC,EAAE,EAAE,CAAC;MAChDC,SAAS,CAACJ,IAAI,CAAC;MACfK,WAAW,CAACL,IAAI,CAACM,QAAQ,IAAI,EAAE,CAAC;MAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,MAAM;QAC3D,MAAMK,YAAY,GAAGf,IAAI,CAACM,QAAQ,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAACC,GAAG,KAAKT,MAAM,CAAC;QACvE,IAAIK,YAAY,CAACK,MAAM,GAAG,CAAC,EAAE;UAC3BC,mBAAmB,CAACN,YAAY,CAAC,CAAC,CAAC,CAACO,MAAM,CAAC;QAC7C;MACF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CE,QAAQ,CAAC,wBAAwB,CAAC;IACpC;EACF,CAAC;EAEDC,UAAU,CAAC,IAAI,CAAC;EAChB3B,WAAW,CAAC,CAAC,CAAC4B,OAAO,CAAC,MAAMD,UAAU,CAAC,KAAK,CAAC,CAAC;EAE9C,MAAME,UAAU,GAAGC,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAM;QAAE7B;MAAK,CAAC,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,YAAYC,EAAE,EAAE,CAAC;MAChD,MAAM2B,WAAW,GAAG9B,IAAI,CAACM,QAAQ,IAAI,EAAE;MACvC,MAAMyB,kBAAkB,GAAG,IAAIC,GAAG,CAAC1B,QAAQ,CAAC2B,GAAG,CAAEhB,CAAC,IAAKA,CAAC,CAACE,GAAG,CAAC,CAAC;MAC9D,MAAMe,aAAa,GAAGJ,WAAW,CAACd,MAAM,CAAEC,CAAC,IAAK,CAACc,kBAAkB,CAACI,GAAG,CAAClB,CAAC,CAACE,GAAG,CAAC,CAAC;MAE/E,IAAIe,aAAa,CAACd,MAAM,GAAG,CAAC,EAAE;QAC5Bf,WAAW,CAAE+B,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE,GAAGF,aAAa,CAAC,CAAC;MACpE;IACF,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC,EAAE,IAAI,CAAC;EAER,OAAO,MAAMc,aAAa,CAACT,UAAU,CAAC;AACxC,CAAC,EAAE,CAACzB,EAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}