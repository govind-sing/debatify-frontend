{"ast":null,"code":"var _jsxFileName = \"/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/components/Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api/axiosInstance\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inbox = ({\n  currentUserId\n}) => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    // Assuming you have a backend API to fetch unique users chatted with\n    const fetchInbox = async () => {\n      try {\n        const {\n          data\n        } = await API.get(`/chats/inbox/${currentUserId}`);\n        setConversations(data);\n      } catch (err) {\n        console.error(\"Failed to fetch inbox\");\n      }\n    };\n    fetchInbox();\n  }, [currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), conversations.map(user => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/chat/${user._id}`,\n      className: \"block p-3 bg-gray-100 rounded mb-2 hover:bg-gray-200\",\n      children: user.name\n    }, user._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Inbox, \"O5exSWX9CCDe/tq8iR4AHPY4uSY=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useEffect","useState","API","Link","jsxDEV","_jsxDEV","Inbox","currentUserId","_s","conversations","setConversations","fetchInbox","data","get","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","to","_id","name","_c","$RefreshReg$"],"sources":["/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/components/Inbox.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../api/axiosInstance\";\nimport { Link } from \"react-router-dom\";\n\nconst Inbox = ({ currentUserId }) => {\n  const [conversations, setConversations] = useState([]);\n\n  useEffect(() => {\n    // Assuming you have a backend API to fetch unique users chatted with\n    const fetchInbox = async () => {\n      try {\n        const { data } = await API.get(`/chats/inbox/${currentUserId}`);\n        setConversations(data);\n      } catch (err) {\n        console.error(\"Failed to fetch inbox\");\n      }\n    };\n    fetchInbox();\n  }, [currentUserId]);\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-bold mb-4\">Inbox</h2>\n      {conversations.map((user) => (\n        <Link\n          key={user._id}\n          to={`/chat/${user._id}`}\n          className=\"block p-3 bg-gray-100 rounded mb-2 hover:bg-gray-200\"\n        >\n          {user.name}\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Inbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,sBAAsB;AACtC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,gBAAgBN,aAAa,EAAE,CAAC;QAC/DG,gBAAgB,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC;IACDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,oBACEF,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAIY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDb,aAAa,CAACc,GAAG,CAAEC,IAAI,iBACtBnB,OAAA,CAACF,IAAI;MAEHsB,EAAE,EAAE,SAASD,IAAI,CAACE,GAAG,EAAG;MACxBT,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAE/DM,IAAI,CAACG;IAAI,GAJLH,IAAI,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKT,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA9BIF,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}