{"ast":null,"code":"// import React, { useEffect, useState, useCallback } from \"react\";\n// import { useParams, useNavigate, useLocation, Link } from \"react-router-dom\";\n// import API from \"../api/axiosInstance\";\n// import { UserRemoveIcon, CogIcon, PencilIcon, CameraIcon, LockClosedIcon } from \"@heroicons/react/outline\";\n// import { motion } from \"framer-motion\";\n\n// const BACKEND_BASE_URL = \"http://localhost:5001\";\n\n// function getToken() {\n//   const token = localStorage.getItem(\"token\");\n//   return token;\n// }\n\n// const ProfilePage = () => {\n//   const { username } = useParams();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const queryParams = new URLSearchParams(location.search);\n//   const initialTab = queryParams.get(\"section\") || \"debate\";\n\n//   const [user, setUser] = useState(null);\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [createdDebates, setCreatedDebates] = useState([]);\n//   const [createdBlogs, setCreatedBlogs] = useState([]);\n//   const [createdDiscussions, setCreatedDiscussions] = useState([]);\n//   const [profileError, setProfileError] = useState(\"\");\n//   const [isFollowing, setIsFollowing] = useState(false);\n//   const [isFollower, setIsFollower] = useState(false);\n//   const [activeTab, setActiveTab] = useState(initialTab);\n//   const [showFollowers, setShowFollowers] = useState(false);\n//   const [showFollowing, setShowFollowing] = useState(false);\n//   const [showSettingsMenu, setShowSettingsMenu] = useState(false);\n//   const [showChangeBioModal, setShowChangeBioModal] = useState(false);\n//   const [showChangePasswordModal, setShowChangePasswordModal] = useState(false);\n//   const [showChangeProfilePictureModal, setShowChangeProfilePictureModal] = useState(false);\n//   const [newBio, setNewBio] = useState(\"\");\n//   const [oldPassword, setOldPassword] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [useOtpMethod, setUseOtpMethod] = useState(false);\n//   const [otpSent, setOtpSent] = useState(false);\n//   const [newProfilePicture, setNewProfilePicture] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [showDeleteMenu, setShowDeleteMenu] = useState(null);\n\n//   const token = getToken();\n\n//   useEffect(() => {\n//     const queryParams = new URLSearchParams(location.search);\n//     const validTabs = [\"debate\", \"discussion\", \"blogs\"];\n//     const newTab = validTabs.includes(activeTab) ? activeTab : \"debate\";\n//     if (newTab !== queryParams.get(\"section\")) {\n//       const searchParams = new URLSearchParams(location.search);\n//       searchParams.set(\"section\", newTab);\n//       navigate(`${location.pathname}?${searchParams.toString()}`, { replace: true });\n//     }\n//   }, [activeTab, navigate, location.pathname, location.search]);\n\n//   const fetchCurrentUser = useCallback(async () => {\n//     if (!token) return null;\n//     try {\n//       const res = await API.get(\"/users/profile/me\", { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data;\n//     } catch (err) {\n//       console.error(\"Error fetching current user:\", err);\n//       return null;\n//     }\n//   }, [token]);\n\n//   const fetchProfile = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data;\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchCreatedDebates = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}/debates`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchCreatedBlogs = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}/blogs`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchCreatedDiscussions = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}/discussions`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchAllData = useCallback(async () => {\n//     setLoading(true);\n//     setUser(null);\n//     setCreatedDebates([]);\n//     setCreatedBlogs([]);\n//     setCreatedDiscussions([]);\n//     setProfileError(\"\");\n\n//     try {\n//       const [currentUserData, userData, debatesData, blogsData, discussionsData] = await Promise.all([\n//         fetchCurrentUser(),\n//         fetchProfile(),\n//         fetchCreatedDebates(),\n//         fetchCreatedBlogs(),\n//         fetchCreatedDiscussions(),\n//       ]);\n\n//       setCurrentUser(currentUserData);\n//       setUser(userData);\n//       setCreatedDebates(debatesData);\n//       setCreatedBlogs(blogsData);\n//       setCreatedDiscussions(discussionsData);\n//       setNewBio(userData.bio || \"\");\n\n//       const followers = Array.isArray(userData.followers) ? userData.followers : [];\n//       const followings = Array.isArray(userData.followings) ? userData.followings : [];\n//       if (currentUserData) {\n//         setIsFollowing(followers.some((f) => String(f._id) === String(currentUserData._id)));\n//         setIsFollower(followings.some((f) => String(f._id) === String(currentUserData._id)));\n//       }\n//     } catch (err) {\n//       console.error(\"Error fetching data:\", err);\n//       setProfileError(err.response?.data?.message || \"Error fetching profile data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   }, [fetchCurrentUser, fetchProfile, fetchCreatedDebates, fetchCreatedBlogs, fetchCreatedDiscussions]);\n\n//   useEffect(() => {\n//     fetchAllData();\n//   }, [username, fetchAllData]);\n\n//   useEffect(() => {\n//     const intervalId = setInterval(async () => {\n//       try {\n//         const { data } = await API.get(`/users/profile/${username}`, { headers: { Authorization: `Bearer ${token}` } });\n//         const newUser = data;\n\n//         setUser((prevUser) => {\n//           if (!prevUser) return newUser;\n\n//           const prevFollowers = Array.isArray(prevUser.followers) ? prevUser.followers : [];\n//           const prevFollowings = Array.isArray(prevUser.followings) ? prevUser.followings : [];\n//           const newFollowers = Array.isArray(newUser.followers) ? newUser.followers : [];\n//           const newFollowings = Array.isArray(newUser.followings) ? newUser.followings : [];\n\n//           if (\n//             JSON.stringify(prevFollowers) !== JSON.stringify(newFollowers) ||\n//             JSON.stringify(prevFollowings) !== JSON.stringify(newFollowings)\n//           ) {\n//             setIsFollowing(newFollowers.some((f) => String(f._id) === String(currentUser?._id)));\n//             setIsFollower(newFollowings.some((f) => String(f._id) === String(currentUser?._id)));\n//             return { ...prevUser, followers: newFollowers, followings: newFollowings };\n//           }\n//           return prevUser;\n//         });\n//       } catch (error) {\n//         console.error(\"Error polling profile:\", error);\n//       }\n//     }, 5000);\n\n//     return () => clearInterval(intervalId);\n//   }, [username, token, currentUser]);\n\n//   const handleDeleteDebate = async (debateId) => {\n//     try {\n//       await API.delete(`/debates/${debateId}`, { headers: { Authorization: `Bearer ${token}` } });\n//       setCreatedDebates(createdDebates.filter((deb) => deb._id !== debateId));\n//       setShowDeleteMenu(null);\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error deleting debate\");\n//     }\n//   };\n\n//   const handleDeleteDiscussion = async (discussionId) => {\n//     try {\n//       await API.delete(`/discussions/${discussionId}`, { headers: { Authorization: `Bearer ${token}` } });\n//       setCreatedDiscussions(createdDiscussions.filter((disc) => disc._id !== discussionId));\n//       setShowDeleteMenu(null);\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error deleting discussion\");\n//     }\n//   };\n\n//   const handleDeleteBlog = async (blogId) => {\n//     try {\n//       await API.delete(`/blogs/${blogId}`, { headers: { Authorization: `Bearer ${token}` } });\n//       setCreatedBlogs(createdBlogs.filter((blog) => blog._id !== blogId));\n//       setShowDeleteMenu(null);\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error deleting blog\");\n//     }\n//   };\n\n//   const handleChangeBio = async () => {\n//     if (newBio.length > 100) {\n//       setProfileError(\"Bio cannot exceed 100 characters.\");\n//       return;\n//     }\n//     try {\n//       if (!token) throw new Error(\"No authentication token found\");\n//       await API.put(\"/users/profile/update-bio\", { bio: newBio }, { headers: { Authorization: `Bearer ${token}` } });\n//       setShowChangeBioModal(false);\n//       fetchAllData();\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error updating bio\");\n//     }\n//   };\n\n//   const handleRequestOtp = async () => {\n//     try {\n//       console.log(\"Requesting OTP for:\", currentUser.email);\n//       await API.post(\"/auth/request-password-reset\", { identifier: currentUser.email }, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setOtpSent(true);\n//       setProfileError(\"\");\n//     } catch (err) {\n//       console.error(\"OTP request error:\", err.response?.data);\n//       setProfileError(err.response?.data?.message || \"Failed to send OTP\");\n//     }\n//   };\n\n//   const handleChangePassword = async () => {\n//     try {\n//       console.log(\"Changing password with:\", { useOtpMethod, oldPassword, newPassword, otp });\n//       if (useOtpMethod) {\n//         if (!otp || !newPassword) {\n//           setProfileError(\"Please provide OTP and new password\");\n//           return;\n//         }\n//         await API.post(\"/auth/reset-password\", { email: currentUser.email, otp, newPassword }, {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//       } else {\n//         if (!oldPassword || !newPassword) {\n//           setProfileError(\"Please provide old and new passwords\");\n//           return;\n//         }\n//         await API.put(\"/auth/profile/change-password\", { oldPassword, newPassword }, {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//       }\n//       setShowChangePasswordModal(false);\n//       setOldPassword(\"\");\n//       setNewPassword(\"\");\n//       setOtp(\"\");\n//       setUseOtpMethod(false);\n//       setOtpSent(false);\n//       setProfileError(\"\");\n//       alert(\"Password changed successfully\");\n//     } catch (err) {\n//       console.error(\"Password change error:\", err.response?.data);\n//       setProfileError(err.response?.data?.message || \"Error changing password\");\n//     }\n//   };\n\n//   const handleChangeProfilePicture = async () => {\n//     if (!newProfilePicture) {\n//       setProfileError(\"Please select a file to upload.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"profilePicture\", newProfilePicture);\n//     try {\n//       await API.put(\"/users/profile/update-profile-picture\", formData, { \n//         headers: { \n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"multipart/form-data\"\n//         } \n//       });\n//       setShowChangeProfilePictureModal(false);\n//       setNewProfilePicture(null);\n//       fetchAllData();\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error updating profile picture\");\n//     }\n//   };\n\n//   const handleLogOut = () => {\n//     localStorage.removeItem(\"token\");\n//     navigate(\"/login\");\n//   };\n\n//   const handleFollow = async () => {\n//     if (!token) {\n//       alert(\"You must be logged in to follow or unfollow!\");\n//       return navigate(\"/login\");\n//     }\n//     try {\n//       if (isFollowing) {\n//         await API.post(`/users/profile/${username}/unfollow`, {}, { headers: { Authorization: `Bearer ${token}` } });\n//         setIsFollowing(false);\n//         setUser((prevUser) => ({\n//           ...prevUser,\n//           followers: prevUser.followers.filter((f) => f._id !== currentUser._id),\n//         }));\n//       } else {\n//         await API.post(`/users/profile/${username}/follow`, {}, { headers: { Authorization: `Bearer ${token}` } });\n//         setIsFollowing(true);\n//         setUser((prevUser) => ({\n//           ...prevUser,\n//           followers: [...prevUser.followers, currentUser],\n//         }));\n//       }\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error following/unfollowing\");\n//     }\n//   };\n\n//   const handleDebateClick = (debateId) =>\n//     navigate(`/debatepage/${debateId}`, { state: { activeTab: \"debate\", fromProfile: username } });\n//   const handleDiscussionClick = (discussionId) =>\n//     navigate(`/discussionpage/${discussionId}`, { state: { activeTab: \"discussion\", fromProfile: username } });\n//   const handleBlogClick = (blogId) =>\n//     navigate(`/blogpage/${blogId}`, { state: { activeTab: \"blogs\", fromProfile: username } });\n\n//   const handleProfileClick = (username) => {\n//     setShowFollowers(false);\n//     setShowFollowing(false);\n//     navigate(`/profile/${username}?section=${activeTab}`);\n//   };\n\n//   const isOwnProfile = currentUser && user && currentUser._id === user._id;\n//   const totalPosts = (createdDebates.length || 0) + (createdDiscussions.length || 0) + (createdBlogs.length || 0);\n//   const followButtonText = isFollowing ? \"Unfollow\" : isFollower ? \"Follow Back\" : \"Follow\";\n\n//   if (loading) {\n//     return (\n//       <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 md:ml-64 flex items-center justify-center\">\n//         <span className=\"text-xl text-gray-800 animate-pulse\">Loading profile...</span>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 md:ml-64 text-gray-800\">\n//       {profileError && (\n//         <div className=\"max-w-4xl mx-auto px-6 mt-6\">\n//           <div className=\"bg-red-100 text-red-800 p-4 rounded-lg shadow-lg animate-fade-in\">{profileError}</div>\n//         </div>\n//       )}\n\n//       <header className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white py-12 shadow-lg\">\n//         <div className=\"max-w-4xl mx-auto px-6\">\n//           <div className=\"flex flex-col items-center md:flex-row md:items-start md:justify-center gap-8\">\n//             <div className=\"relative group\">\n//               <img\n//                 src={\n//                   user?.profilePicture\n//                     ? `${BACKEND_BASE_URL}${user.profilePicture}`\n//                     : `${BACKEND_BASE_URL}/images/default-avatar.png`\n//                 }\n//                 alt=\"profile\"\n//                 className=\"w-40 h-40 rounded-full object-cover border-4 border-white bg-gradient-to-r from-yellow-400 to-pink-500 p-1 group-hover:scale-110 transition-transform duration-300 shadow-xl transform hover:rotate-3\"\n//                 onError={(e) => (e.target.src = `${BACKEND_BASE_URL}/images/default-avatar.png`)}\n//               />\n//               {isOwnProfile && (\n//                 <button\n//                   onClick={() => setShowChangeProfilePictureModal(true)}\n//                   className=\"absolute bottom-2 right-2 p-2 bg-white text-blue-600 rounded-full hover:bg-gray-100 transition-colors duration-200 shadow-md\"\n//                 >\n//                   <CameraIcon className=\"h-6 w-6\" />\n//                 </button>\n//               )}\n//             </div>\n//             <div className=\"text-center md:text-left\">\n//               <div className=\"flex items-center justify-center md:justify-start mb-4\">\n//                 <h1 className=\"text-4xl font-extrabold text-white drop-shadow-md\">{user?.username || \"Loading...\"}</h1>\n//                 {isOwnProfile ? (\n//                   <button\n//                     onClick={() => setShowSettingsMenu(!showSettingsMenu)}\n//                     className=\"ml-4 p-2 bg-white bg-opacity-20 rounded-full hover:bg-opacity-30 transition-all duration-200\"\n//                   >\n//                     <CogIcon className=\"h-6 w-6 text-white\" />\n//                   </button>\n//                 ) : (\n//                   <div className=\"ml-4 flex space-x-3\">\n//                     <button\n//                       onClick={handleFollow}\n//                       className={`px-5 py-2 rounded-full text-white font-semibold shadow-md ${\n//                         isFollowing ? \"bg-gray-500 hover:bg-gray-600\" : \"bg-blue-500 hover:bg-blue-600\"\n//                       } transition-all duration-200 transform hover:scale-105`}\n//                     >\n//                       {followButtonText}\n//                     </button>\n//                   </div>\n//                 )}\n//               </div>\n//               {showSettingsMenu && isOwnProfile && (\n//                 <div className=\"absolute mt-2 w-56 bg-white rounded-xl shadow-xl z-10 border border-gray-200 animate-fade-in\">\n//                   <ul className=\"py-2\">\n//                     <li\n//                       className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer flex items-center text-gray-800\"\n//                       onClick={() => {\n//                         setShowChangeBioModal(true);\n//                         setShowSettingsMenu(false);\n//                       }}\n//                     >\n//                       <PencilIcon className=\"h-5 w-5 mr-2\" />\n//                       Change Bio\n//                     </li>\n//                     <li\n//                       className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer flex items-center text-gray-800\"\n//                       onClick={() => {\n//                         setShowChangePasswordModal(true);\n//                         setShowSettingsMenu(false);\n//                       }}\n//                     >\n//                       <LockClosedIcon className=\"h-5 w-5 mr-2\" />\n//                       Change Password\n//                     </li>\n//                     <li\n//                       className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer flex items-center text-gray-800\"\n//                       onClick={handleLogOut}\n//                     >\n//                       <UserRemoveIcon className=\"h-5 w-5 mr-2\" />\n//                       Log Out\n//                     </li>\n//                   </ul>\n//                 </div>\n//               )}\n//               <div className=\"flex justify-center md:justify-start space-x-10 mb-6\">\n//                 <div className=\"flex items-center group cursor-pointer hover:text-yellow-300 transition-all duration-200\">\n//                   <span className=\"font-semibold text-xl group-hover:scale-110 transition-transform duration-200\">\n//                     {totalPosts}\n//                   </span>\n//                   <span className=\"text-gray-200 ml-2\">Posts</span>\n//                 </div>\n//                 <div\n//                   onClick={() => setShowFollowers(true)}\n//                   className=\"flex items-center group cursor-pointer hover:text-yellow-300 transition-all duration-200\"\n//                 >\n//                   <span className=\"font-semibold text-xl group-hover:scale-110 transition-transform duration-200\">\n//                     {user?.followers?.length || 0}\n//                   </span>\n//                   <span className=\"text-gray-200 ml-2\">Followers</span>\n//                 </div>\n//                 <div\n//                   onClick={() => setShowFollowing(true)}\n//                   className=\"flex items-center group cursor-pointer hover:text-yellow-300 transition-all duration-200\"\n//                 >\n//                   <span className=\"font-semibold text-xl group-hover:scale-110 transition-transform duration-200\">\n//                     {user?.followings?.length || 0}\n//                   </span>\n//                   <span className=\"text-gray-200 ml-2\">Following</span>\n//                 </div>\n//               </div>\n//               <p className=\"text-gray-100 italic bg-white bg-opacity-10 p-3 rounded-lg shadow-inner text-center max-w-md mx-auto max-h-24 overflow-y-auto\">\n//                 {user?.bio || \"No bio yet.\"}\n//               </p>\n//             </div>\n//           </div>\n//         </div>\n//       </header>\n\n//       <div className=\"max-w-4xl mx-auto px-6 py-8\">\n//         <div className=\"flex justify-center space-x-10 border-b border-gray-200 pb-4 bg-white rounded-t-xl shadow-md\">\n//           {[\"debate\", \"discussion\", \"blogs\"].map((tab) => (\n//             <button\n//               key={tab}\n//               onClick={() => setActiveTab(tab)}\n//               className={`relative px-6 py-2 text-sm font-semibold uppercase ${\n//                 activeTab === tab ? \"text-blue-600\" : \"text-gray-600 hover:text-gray-800\"\n//               } transition-all duration-300 ease-in-out`}\n//             >\n//               {tab}\n//               {activeTab === tab && (\n//                 <span className=\"absolute bottom-0 left-0 w-full h-1 bg-blue-600 rounded-t-full transform scale-x-100 transition-transform duration-300 ease-in-out\"></span>\n//               )}\n//             </button>\n//           ))}\n//         </div>\n\n//         <motion.div\n//           key={activeTab}\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5 }}\n//           className=\"mt-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 bg-white p-6 rounded-b-xl shadow-md\"\n//         >\n//           {isOwnProfile && (\n//             <div className=\"col-span-full flex justify-end mb-4\">\n//               {activeTab === \"debate\" && (\n//                 <Link\n//                   to=\"/createDebate\"\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-all duration-200 shadow-md\"\n//                 >\n//                   Create Debate\n//                 </Link>\n//               )}\n//               {activeTab === \"discussion\" && (\n//                 <Link\n//                   to=\"/createDiscussion\"\n//                   className=\"bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-all duration-200 shadow-md\"\n//                 >\n//                   Create Discussion\n//                 </Link>\n//               )}\n//               {activeTab === \"blogs\" && (\n//                 <Link\n//                   to=\"/createBlog\"\n//                   className=\"bg-pink-500 text-white px-4 py-2 rounded-lg hover:bg-pink-600 transition-all duration-200 shadow-md\"\n//                 >\n//                   Create Blog\n//                 </Link>\n//               )}\n//             </div>\n//           )}\n\n//           {activeTab === \"debate\" && (\n//             createdDebates.length > 0 ? (\n//               createdDebates.map((deb) => (\n//                 <div\n//                   key={deb._id}\n//                   className=\"bg-gradient-to-br from-gray-50 to-blue-50 rounded-xl p-4 cursor-pointer hover:shadow-xl hover:scale-105 transition-all duration-300 shadow-lg relative h-32 overflow-hidden\"\n//                   onClick={(e) => {\n//                     if (!e.target.closest(\".delete-menu-button\") && !e.target.closest(\".delete-menu\")) {\n//                       handleDebateClick(deb._id);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"flex justify-between items-start h-full\">\n//                     <div className=\"flex-1 overflow-hidden\">\n//                       <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{deb.title || \"Untitled Debate\"}</h3>\n//                       <p className=\"text-gray-600 text-xs mt-1 line-clamp-3\">{deb.openingArgument || \"No opening argument\"}</p>\n//                     </div>\n//                     {isOwnProfile && (\n//                       <div className=\"relative\">\n//                         <button\n//                           className=\"delete-menu-button p-1 hover:bg-gray-200 rounded-full\"\n//                           onClick={(e) => {\n//                             e.stopPropagation();\n//                             setShowDeleteMenu(showDeleteMenu === deb._id ? null : deb._id);\n//                           }}\n//                         >\n//                           <span className=\"text-gray-600 text-lg leading-none\">⋯</span>\n//                         </button>\n//                         {showDeleteMenu === deb._id && (\n//                           <div className=\"delete-menu absolute right-0 mt-1 w-32 bg-white rounded-lg shadow-xl z-10 border border-gray-200\">\n//                             <button\n//                               className=\"w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100 text-left\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 handleDeleteDebate(deb._id);\n//                               }}\n//                             >\n//                               Delete\n//                             </button>\n//                           </div>\n//                         )}\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p className=\"col-span-3 text-center text-gray-500\">No debates created yet.</p>\n//             )\n//           )}\n//           {activeTab === \"discussion\" && (\n//             createdDiscussions.length > 0 ? (\n//               createdDiscussions.map((disc) => (\n//                 <div\n//                   key={disc._id}\n//                   className=\"bg-gradient-to-br from-gray-50 to-purple-50 rounded-xl p-4 cursor-pointer hover:shadow-xl hover:scale-105 transition-all duration-300 shadow-lg relative h-32 overflow-hidden\"\n//                   onClick={(e) => {\n//                     if (!e.target.closest(\".delete-menu-button\") && !e.target.closest(\".delete-menu\")) {\n//                       handleDiscussionClick(disc._id);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"flex justify-between items-start h-full\">\n//                     <div className=\"flex-1 overflow-hidden\">\n//                       <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{disc.title || \"Untitled Discussion\"}</h3>\n//                       <p className=\"text-gray-600 text-xs mt-1 line-clamp-3\">{disc.description || \"No description\"}</p>\n//                     </div>\n//                     {isOwnProfile && (\n//                       <div className=\"relative\">\n//                         <button\n//                           className=\"delete-menu-button p-1 hover:bg-gray-200 rounded-full\"\n//                           onClick={(e) => {\n//                             e.stopPropagation();\n//                             setShowDeleteMenu(showDeleteMenu === disc._id ? null : disc._id);\n//                           }}\n//                         >\n//                           <span className=\"text-gray-600 text-lg leading-none\">⋯</span>\n//                         </button>\n//                         {showDeleteMenu === disc._id && (\n//                           <div className=\"delete-menu absolute right-0 mt-1 w-32 bg-white rounded-lg shadow-xl z-10 border border-gray-200\">\n//                             <button\n//                               className=\"w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100 text-left\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 handleDeleteDiscussion(disc._id);\n//                               }}\n//                             >\n//                               Delete\n//                             </button>\n//                           </div>\n//                         )}\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p className=\"col-span-3 text-center text-gray-500\">No discussions created yet.</p>\n//             )\n//           )}\n//           {activeTab === \"blogs\" && (\n//             createdBlogs.length > 0 ? (\n//               createdBlogs.map((blog) => (\n//                 <div\n//                   key={blog._id}\n//                   className=\"bg-gradient-to-br from-gray-50 to-pink-50 rounded-xl p-4 cursor-pointer hover:shadow-xl hover:scale-105 transition-all duration-300 shadow-lg relative h-48 overflow-hidden\"\n//                   onClick={(e) => {\n//                     if (!e.target.closest(\".delete-menu-button\") && !e.target.closest(\".delete-menu\")) {\n//                       handleBlogClick(blog._id);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"flex justify-between items-start h-full flex-col\">\n//                     <div className=\"flex-1 w-full overflow-hidden\">\n//                       <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{blog.title || \"Untitled Blog\"}</h3>\n//                       <p className=\"text-gray-600 text-xs mt-1 line-clamp-2\">{blog.content || \"No content\"}</p>\n//                     </div>\n//                     {blog.fileUrl && blog.fileUrl.match(/\\.(jpeg|jpg|png)$/i) && (\n//                       <img\n//                         src={`${BACKEND_BASE_URL}${blog.fileUrl}`}\n//                         alt=\"Blog","map":{"version":3,"names":[],"sources":["/Users/govindsinghtanwar/coding/Projects/debatify/frontend/src/pages/ProfilePage.js"],"sourcesContent":["// import React, { useEffect, useState, useCallback } from \"react\";\n// import { useParams, useNavigate, useLocation, Link } from \"react-router-dom\";\n// import API from \"../api/axiosInstance\";\n// import { UserRemoveIcon, CogIcon, PencilIcon, CameraIcon, LockClosedIcon } from \"@heroicons/react/outline\";\n// import { motion } from \"framer-motion\";\n\n// const BACKEND_BASE_URL = \"http://localhost:5001\";\n\n// function getToken() {\n//   const token = localStorage.getItem(\"token\");\n//   return token;\n// }\n\n// const ProfilePage = () => {\n//   const { username } = useParams();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const queryParams = new URLSearchParams(location.search);\n//   const initialTab = queryParams.get(\"section\") || \"debate\";\n\n//   const [user, setUser] = useState(null);\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [createdDebates, setCreatedDebates] = useState([]);\n//   const [createdBlogs, setCreatedBlogs] = useState([]);\n//   const [createdDiscussions, setCreatedDiscussions] = useState([]);\n//   const [profileError, setProfileError] = useState(\"\");\n//   const [isFollowing, setIsFollowing] = useState(false);\n//   const [isFollower, setIsFollower] = useState(false);\n//   const [activeTab, setActiveTab] = useState(initialTab);\n//   const [showFollowers, setShowFollowers] = useState(false);\n//   const [showFollowing, setShowFollowing] = useState(false);\n//   const [showSettingsMenu, setShowSettingsMenu] = useState(false);\n//   const [showChangeBioModal, setShowChangeBioModal] = useState(false);\n//   const [showChangePasswordModal, setShowChangePasswordModal] = useState(false);\n//   const [showChangeProfilePictureModal, setShowChangeProfilePictureModal] = useState(false);\n//   const [newBio, setNewBio] = useState(\"\");\n//   const [oldPassword, setOldPassword] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [useOtpMethod, setUseOtpMethod] = useState(false);\n//   const [otpSent, setOtpSent] = useState(false);\n//   const [newProfilePicture, setNewProfilePicture] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [showDeleteMenu, setShowDeleteMenu] = useState(null);\n\n//   const token = getToken();\n\n//   useEffect(() => {\n//     const queryParams = new URLSearchParams(location.search);\n//     const validTabs = [\"debate\", \"discussion\", \"blogs\"];\n//     const newTab = validTabs.includes(activeTab) ? activeTab : \"debate\";\n//     if (newTab !== queryParams.get(\"section\")) {\n//       const searchParams = new URLSearchParams(location.search);\n//       searchParams.set(\"section\", newTab);\n//       navigate(`${location.pathname}?${searchParams.toString()}`, { replace: true });\n//     }\n//   }, [activeTab, navigate, location.pathname, location.search]);\n\n//   const fetchCurrentUser = useCallback(async () => {\n//     if (!token) return null;\n//     try {\n//       const res = await API.get(\"/users/profile/me\", { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data;\n//     } catch (err) {\n//       console.error(\"Error fetching current user:\", err);\n//       return null;\n//     }\n//   }, [token]);\n\n//   const fetchProfile = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data;\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchCreatedDebates = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}/debates`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchCreatedBlogs = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}/blogs`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchCreatedDiscussions = useCallback(async () => {\n//     try {\n//       const res = await API.get(`/users/profile/${username}/discussions`, { headers: { Authorization: `Bearer ${token}` } });\n//       return res.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n//     } catch (err) {\n//       throw err;\n//     }\n//   }, [username, token]);\n\n//   const fetchAllData = useCallback(async () => {\n//     setLoading(true);\n//     setUser(null);\n//     setCreatedDebates([]);\n//     setCreatedBlogs([]);\n//     setCreatedDiscussions([]);\n//     setProfileError(\"\");\n\n//     try {\n//       const [currentUserData, userData, debatesData, blogsData, discussionsData] = await Promise.all([\n//         fetchCurrentUser(),\n//         fetchProfile(),\n//         fetchCreatedDebates(),\n//         fetchCreatedBlogs(),\n//         fetchCreatedDiscussions(),\n//       ]);\n\n//       setCurrentUser(currentUserData);\n//       setUser(userData);\n//       setCreatedDebates(debatesData);\n//       setCreatedBlogs(blogsData);\n//       setCreatedDiscussions(discussionsData);\n//       setNewBio(userData.bio || \"\");\n\n//       const followers = Array.isArray(userData.followers) ? userData.followers : [];\n//       const followings = Array.isArray(userData.followings) ? userData.followings : [];\n//       if (currentUserData) {\n//         setIsFollowing(followers.some((f) => String(f._id) === String(currentUserData._id)));\n//         setIsFollower(followings.some((f) => String(f._id) === String(currentUserData._id)));\n//       }\n//     } catch (err) {\n//       console.error(\"Error fetching data:\", err);\n//       setProfileError(err.response?.data?.message || \"Error fetching profile data\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   }, [fetchCurrentUser, fetchProfile, fetchCreatedDebates, fetchCreatedBlogs, fetchCreatedDiscussions]);\n\n//   useEffect(() => {\n//     fetchAllData();\n//   }, [username, fetchAllData]);\n\n//   useEffect(() => {\n//     const intervalId = setInterval(async () => {\n//       try {\n//         const { data } = await API.get(`/users/profile/${username}`, { headers: { Authorization: `Bearer ${token}` } });\n//         const newUser = data;\n\n//         setUser((prevUser) => {\n//           if (!prevUser) return newUser;\n\n//           const prevFollowers = Array.isArray(prevUser.followers) ? prevUser.followers : [];\n//           const prevFollowings = Array.isArray(prevUser.followings) ? prevUser.followings : [];\n//           const newFollowers = Array.isArray(newUser.followers) ? newUser.followers : [];\n//           const newFollowings = Array.isArray(newUser.followings) ? newUser.followings : [];\n\n//           if (\n//             JSON.stringify(prevFollowers) !== JSON.stringify(newFollowers) ||\n//             JSON.stringify(prevFollowings) !== JSON.stringify(newFollowings)\n//           ) {\n//             setIsFollowing(newFollowers.some((f) => String(f._id) === String(currentUser?._id)));\n//             setIsFollower(newFollowings.some((f) => String(f._id) === String(currentUser?._id)));\n//             return { ...prevUser, followers: newFollowers, followings: newFollowings };\n//           }\n//           return prevUser;\n//         });\n//       } catch (error) {\n//         console.error(\"Error polling profile:\", error);\n//       }\n//     }, 5000);\n\n//     return () => clearInterval(intervalId);\n//   }, [username, token, currentUser]);\n\n//   const handleDeleteDebate = async (debateId) => {\n//     try {\n//       await API.delete(`/debates/${debateId}`, { headers: { Authorization: `Bearer ${token}` } });\n//       setCreatedDebates(createdDebates.filter((deb) => deb._id !== debateId));\n//       setShowDeleteMenu(null);\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error deleting debate\");\n//     }\n//   };\n\n//   const handleDeleteDiscussion = async (discussionId) => {\n//     try {\n//       await API.delete(`/discussions/${discussionId}`, { headers: { Authorization: `Bearer ${token}` } });\n//       setCreatedDiscussions(createdDiscussions.filter((disc) => disc._id !== discussionId));\n//       setShowDeleteMenu(null);\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error deleting discussion\");\n//     }\n//   };\n\n//   const handleDeleteBlog = async (blogId) => {\n//     try {\n//       await API.delete(`/blogs/${blogId}`, { headers: { Authorization: `Bearer ${token}` } });\n//       setCreatedBlogs(createdBlogs.filter((blog) => blog._id !== blogId));\n//       setShowDeleteMenu(null);\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error deleting blog\");\n//     }\n//   };\n\n//   const handleChangeBio = async () => {\n//     if (newBio.length > 100) {\n//       setProfileError(\"Bio cannot exceed 100 characters.\");\n//       return;\n//     }\n//     try {\n//       if (!token) throw new Error(\"No authentication token found\");\n//       await API.put(\"/users/profile/update-bio\", { bio: newBio }, { headers: { Authorization: `Bearer ${token}` } });\n//       setShowChangeBioModal(false);\n//       fetchAllData();\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error updating bio\");\n//     }\n//   };\n\n//   const handleRequestOtp = async () => {\n//     try {\n//       console.log(\"Requesting OTP for:\", currentUser.email);\n//       await API.post(\"/auth/request-password-reset\", { identifier: currentUser.email }, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setOtpSent(true);\n//       setProfileError(\"\");\n//     } catch (err) {\n//       console.error(\"OTP request error:\", err.response?.data);\n//       setProfileError(err.response?.data?.message || \"Failed to send OTP\");\n//     }\n//   };\n\n//   const handleChangePassword = async () => {\n//     try {\n//       console.log(\"Changing password with:\", { useOtpMethod, oldPassword, newPassword, otp });\n//       if (useOtpMethod) {\n//         if (!otp || !newPassword) {\n//           setProfileError(\"Please provide OTP and new password\");\n//           return;\n//         }\n//         await API.post(\"/auth/reset-password\", { email: currentUser.email, otp, newPassword }, {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//       } else {\n//         if (!oldPassword || !newPassword) {\n//           setProfileError(\"Please provide old and new passwords\");\n//           return;\n//         }\n//         await API.put(\"/auth/profile/change-password\", { oldPassword, newPassword }, {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//       }\n//       setShowChangePasswordModal(false);\n//       setOldPassword(\"\");\n//       setNewPassword(\"\");\n//       setOtp(\"\");\n//       setUseOtpMethod(false);\n//       setOtpSent(false);\n//       setProfileError(\"\");\n//       alert(\"Password changed successfully\");\n//     } catch (err) {\n//       console.error(\"Password change error:\", err.response?.data);\n//       setProfileError(err.response?.data?.message || \"Error changing password\");\n//     }\n//   };\n\n//   const handleChangeProfilePicture = async () => {\n//     if (!newProfilePicture) {\n//       setProfileError(\"Please select a file to upload.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"profilePicture\", newProfilePicture);\n//     try {\n//       await API.put(\"/users/profile/update-profile-picture\", formData, { \n//         headers: { \n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"multipart/form-data\"\n//         } \n//       });\n//       setShowChangeProfilePictureModal(false);\n//       setNewProfilePicture(null);\n//       fetchAllData();\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error updating profile picture\");\n//     }\n//   };\n\n//   const handleLogOut = () => {\n//     localStorage.removeItem(\"token\");\n//     navigate(\"/login\");\n//   };\n\n//   const handleFollow = async () => {\n//     if (!token) {\n//       alert(\"You must be logged in to follow or unfollow!\");\n//       return navigate(\"/login\");\n//     }\n//     try {\n//       if (isFollowing) {\n//         await API.post(`/users/profile/${username}/unfollow`, {}, { headers: { Authorization: `Bearer ${token}` } });\n//         setIsFollowing(false);\n//         setUser((prevUser) => ({\n//           ...prevUser,\n//           followers: prevUser.followers.filter((f) => f._id !== currentUser._id),\n//         }));\n//       } else {\n//         await API.post(`/users/profile/${username}/follow`, {}, { headers: { Authorization: `Bearer ${token}` } });\n//         setIsFollowing(true);\n//         setUser((prevUser) => ({\n//           ...prevUser,\n//           followers: [...prevUser.followers, currentUser],\n//         }));\n//       }\n//     } catch (err) {\n//       setProfileError(err.response?.data?.message || \"Error following/unfollowing\");\n//     }\n//   };\n\n//   const handleDebateClick = (debateId) =>\n//     navigate(`/debatepage/${debateId}`, { state: { activeTab: \"debate\", fromProfile: username } });\n//   const handleDiscussionClick = (discussionId) =>\n//     navigate(`/discussionpage/${discussionId}`, { state: { activeTab: \"discussion\", fromProfile: username } });\n//   const handleBlogClick = (blogId) =>\n//     navigate(`/blogpage/${blogId}`, { state: { activeTab: \"blogs\", fromProfile: username } });\n\n//   const handleProfileClick = (username) => {\n//     setShowFollowers(false);\n//     setShowFollowing(false);\n//     navigate(`/profile/${username}?section=${activeTab}`);\n//   };\n\n//   const isOwnProfile = currentUser && user && currentUser._id === user._id;\n//   const totalPosts = (createdDebates.length || 0) + (createdDiscussions.length || 0) + (createdBlogs.length || 0);\n//   const followButtonText = isFollowing ? \"Unfollow\" : isFollower ? \"Follow Back\" : \"Follow\";\n\n//   if (loading) {\n//     return (\n//       <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 md:ml-64 flex items-center justify-center\">\n//         <span className=\"text-xl text-gray-800 animate-pulse\">Loading profile...</span>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 md:ml-64 text-gray-800\">\n//       {profileError && (\n//         <div className=\"max-w-4xl mx-auto px-6 mt-6\">\n//           <div className=\"bg-red-100 text-red-800 p-4 rounded-lg shadow-lg animate-fade-in\">{profileError}</div>\n//         </div>\n//       )}\n\n//       <header className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white py-12 shadow-lg\">\n//         <div className=\"max-w-4xl mx-auto px-6\">\n//           <div className=\"flex flex-col items-center md:flex-row md:items-start md:justify-center gap-8\">\n//             <div className=\"relative group\">\n//               <img\n//                 src={\n//                   user?.profilePicture\n//                     ? `${BACKEND_BASE_URL}${user.profilePicture}`\n//                     : `${BACKEND_BASE_URL}/images/default-avatar.png`\n//                 }\n//                 alt=\"profile\"\n//                 className=\"w-40 h-40 rounded-full object-cover border-4 border-white bg-gradient-to-r from-yellow-400 to-pink-500 p-1 group-hover:scale-110 transition-transform duration-300 shadow-xl transform hover:rotate-3\"\n//                 onError={(e) => (e.target.src = `${BACKEND_BASE_URL}/images/default-avatar.png`)}\n//               />\n//               {isOwnProfile && (\n//                 <button\n//                   onClick={() => setShowChangeProfilePictureModal(true)}\n//                   className=\"absolute bottom-2 right-2 p-2 bg-white text-blue-600 rounded-full hover:bg-gray-100 transition-colors duration-200 shadow-md\"\n//                 >\n//                   <CameraIcon className=\"h-6 w-6\" />\n//                 </button>\n//               )}\n//             </div>\n//             <div className=\"text-center md:text-left\">\n//               <div className=\"flex items-center justify-center md:justify-start mb-4\">\n//                 <h1 className=\"text-4xl font-extrabold text-white drop-shadow-md\">{user?.username || \"Loading...\"}</h1>\n//                 {isOwnProfile ? (\n//                   <button\n//                     onClick={() => setShowSettingsMenu(!showSettingsMenu)}\n//                     className=\"ml-4 p-2 bg-white bg-opacity-20 rounded-full hover:bg-opacity-30 transition-all duration-200\"\n//                   >\n//                     <CogIcon className=\"h-6 w-6 text-white\" />\n//                   </button>\n//                 ) : (\n//                   <div className=\"ml-4 flex space-x-3\">\n//                     <button\n//                       onClick={handleFollow}\n//                       className={`px-5 py-2 rounded-full text-white font-semibold shadow-md ${\n//                         isFollowing ? \"bg-gray-500 hover:bg-gray-600\" : \"bg-blue-500 hover:bg-blue-600\"\n//                       } transition-all duration-200 transform hover:scale-105`}\n//                     >\n//                       {followButtonText}\n//                     </button>\n//                   </div>\n//                 )}\n//               </div>\n//               {showSettingsMenu && isOwnProfile && (\n//                 <div className=\"absolute mt-2 w-56 bg-white rounded-xl shadow-xl z-10 border border-gray-200 animate-fade-in\">\n//                   <ul className=\"py-2\">\n//                     <li\n//                       className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer flex items-center text-gray-800\"\n//                       onClick={() => {\n//                         setShowChangeBioModal(true);\n//                         setShowSettingsMenu(false);\n//                       }}\n//                     >\n//                       <PencilIcon className=\"h-5 w-5 mr-2\" />\n//                       Change Bio\n//                     </li>\n//                     <li\n//                       className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer flex items-center text-gray-800\"\n//                       onClick={() => {\n//                         setShowChangePasswordModal(true);\n//                         setShowSettingsMenu(false);\n//                       }}\n//                     >\n//                       <LockClosedIcon className=\"h-5 w-5 mr-2\" />\n//                       Change Password\n//                     </li>\n//                     <li\n//                       className=\"px-4 py-3 hover:bg-gray-100 cursor-pointer flex items-center text-gray-800\"\n//                       onClick={handleLogOut}\n//                     >\n//                       <UserRemoveIcon className=\"h-5 w-5 mr-2\" />\n//                       Log Out\n//                     </li>\n//                   </ul>\n//                 </div>\n//               )}\n//               <div className=\"flex justify-center md:justify-start space-x-10 mb-6\">\n//                 <div className=\"flex items-center group cursor-pointer hover:text-yellow-300 transition-all duration-200\">\n//                   <span className=\"font-semibold text-xl group-hover:scale-110 transition-transform duration-200\">\n//                     {totalPosts}\n//                   </span>\n//                   <span className=\"text-gray-200 ml-2\">Posts</span>\n//                 </div>\n//                 <div\n//                   onClick={() => setShowFollowers(true)}\n//                   className=\"flex items-center group cursor-pointer hover:text-yellow-300 transition-all duration-200\"\n//                 >\n//                   <span className=\"font-semibold text-xl group-hover:scale-110 transition-transform duration-200\">\n//                     {user?.followers?.length || 0}\n//                   </span>\n//                   <span className=\"text-gray-200 ml-2\">Followers</span>\n//                 </div>\n//                 <div\n//                   onClick={() => setShowFollowing(true)}\n//                   className=\"flex items-center group cursor-pointer hover:text-yellow-300 transition-all duration-200\"\n//                 >\n//                   <span className=\"font-semibold text-xl group-hover:scale-110 transition-transform duration-200\">\n//                     {user?.followings?.length || 0}\n//                   </span>\n//                   <span className=\"text-gray-200 ml-2\">Following</span>\n//                 </div>\n//               </div>\n//               <p className=\"text-gray-100 italic bg-white bg-opacity-10 p-3 rounded-lg shadow-inner text-center max-w-md mx-auto max-h-24 overflow-y-auto\">\n//                 {user?.bio || \"No bio yet.\"}\n//               </p>\n//             </div>\n//           </div>\n//         </div>\n//       </header>\n\n//       <div className=\"max-w-4xl mx-auto px-6 py-8\">\n//         <div className=\"flex justify-center space-x-10 border-b border-gray-200 pb-4 bg-white rounded-t-xl shadow-md\">\n//           {[\"debate\", \"discussion\", \"blogs\"].map((tab) => (\n//             <button\n//               key={tab}\n//               onClick={() => setActiveTab(tab)}\n//               className={`relative px-6 py-2 text-sm font-semibold uppercase ${\n//                 activeTab === tab ? \"text-blue-600\" : \"text-gray-600 hover:text-gray-800\"\n//               } transition-all duration-300 ease-in-out`}\n//             >\n//               {tab}\n//               {activeTab === tab && (\n//                 <span className=\"absolute bottom-0 left-0 w-full h-1 bg-blue-600 rounded-t-full transform scale-x-100 transition-transform duration-300 ease-in-out\"></span>\n//               )}\n//             </button>\n//           ))}\n//         </div>\n\n//         <motion.div\n//           key={activeTab}\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5 }}\n//           className=\"mt-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 bg-white p-6 rounded-b-xl shadow-md\"\n//         >\n//           {isOwnProfile && (\n//             <div className=\"col-span-full flex justify-end mb-4\">\n//               {activeTab === \"debate\" && (\n//                 <Link\n//                   to=\"/createDebate\"\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-all duration-200 shadow-md\"\n//                 >\n//                   Create Debate\n//                 </Link>\n//               )}\n//               {activeTab === \"discussion\" && (\n//                 <Link\n//                   to=\"/createDiscussion\"\n//                   className=\"bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-all duration-200 shadow-md\"\n//                 >\n//                   Create Discussion\n//                 </Link>\n//               )}\n//               {activeTab === \"blogs\" && (\n//                 <Link\n//                   to=\"/createBlog\"\n//                   className=\"bg-pink-500 text-white px-4 py-2 rounded-lg hover:bg-pink-600 transition-all duration-200 shadow-md\"\n//                 >\n//                   Create Blog\n//                 </Link>\n//               )}\n//             </div>\n//           )}\n\n//           {activeTab === \"debate\" && (\n//             createdDebates.length > 0 ? (\n//               createdDebates.map((deb) => (\n//                 <div\n//                   key={deb._id}\n//                   className=\"bg-gradient-to-br from-gray-50 to-blue-50 rounded-xl p-4 cursor-pointer hover:shadow-xl hover:scale-105 transition-all duration-300 shadow-lg relative h-32 overflow-hidden\"\n//                   onClick={(e) => {\n//                     if (!e.target.closest(\".delete-menu-button\") && !e.target.closest(\".delete-menu\")) {\n//                       handleDebateClick(deb._id);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"flex justify-between items-start h-full\">\n//                     <div className=\"flex-1 overflow-hidden\">\n//                       <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{deb.title || \"Untitled Debate\"}</h3>\n//                       <p className=\"text-gray-600 text-xs mt-1 line-clamp-3\">{deb.openingArgument || \"No opening argument\"}</p>\n//                     </div>\n//                     {isOwnProfile && (\n//                       <div className=\"relative\">\n//                         <button\n//                           className=\"delete-menu-button p-1 hover:bg-gray-200 rounded-full\"\n//                           onClick={(e) => {\n//                             e.stopPropagation();\n//                             setShowDeleteMenu(showDeleteMenu === deb._id ? null : deb._id);\n//                           }}\n//                         >\n//                           <span className=\"text-gray-600 text-lg leading-none\">⋯</span>\n//                         </button>\n//                         {showDeleteMenu === deb._id && (\n//                           <div className=\"delete-menu absolute right-0 mt-1 w-32 bg-white rounded-lg shadow-xl z-10 border border-gray-200\">\n//                             <button\n//                               className=\"w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100 text-left\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 handleDeleteDebate(deb._id);\n//                               }}\n//                             >\n//                               Delete\n//                             </button>\n//                           </div>\n//                         )}\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p className=\"col-span-3 text-center text-gray-500\">No debates created yet.</p>\n//             )\n//           )}\n//           {activeTab === \"discussion\" && (\n//             createdDiscussions.length > 0 ? (\n//               createdDiscussions.map((disc) => (\n//                 <div\n//                   key={disc._id}\n//                   className=\"bg-gradient-to-br from-gray-50 to-purple-50 rounded-xl p-4 cursor-pointer hover:shadow-xl hover:scale-105 transition-all duration-300 shadow-lg relative h-32 overflow-hidden\"\n//                   onClick={(e) => {\n//                     if (!e.target.closest(\".delete-menu-button\") && !e.target.closest(\".delete-menu\")) {\n//                       handleDiscussionClick(disc._id);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"flex justify-between items-start h-full\">\n//                     <div className=\"flex-1 overflow-hidden\">\n//                       <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{disc.title || \"Untitled Discussion\"}</h3>\n//                       <p className=\"text-gray-600 text-xs mt-1 line-clamp-3\">{disc.description || \"No description\"}</p>\n//                     </div>\n//                     {isOwnProfile && (\n//                       <div className=\"relative\">\n//                         <button\n//                           className=\"delete-menu-button p-1 hover:bg-gray-200 rounded-full\"\n//                           onClick={(e) => {\n//                             e.stopPropagation();\n//                             setShowDeleteMenu(showDeleteMenu === disc._id ? null : disc._id);\n//                           }}\n//                         >\n//                           <span className=\"text-gray-600 text-lg leading-none\">⋯</span>\n//                         </button>\n//                         {showDeleteMenu === disc._id && (\n//                           <div className=\"delete-menu absolute right-0 mt-1 w-32 bg-white rounded-lg shadow-xl z-10 border border-gray-200\">\n//                             <button\n//                               className=\"w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100 text-left\"\n//                               onClick={(e) => {\n//                                 e.stopPropagation();\n//                                 handleDeleteDiscussion(disc._id);\n//                               }}\n//                             >\n//                               Delete\n//                             </button>\n//                           </div>\n//                         )}\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))\n//             ) : (\n//               <p className=\"col-span-3 text-center text-gray-500\">No discussions created yet.</p>\n//             )\n//           )}\n//           {activeTab === \"blogs\" && (\n//             createdBlogs.length > 0 ? (\n//               createdBlogs.map((blog) => (\n//                 <div\n//                   key={blog._id}\n//                   className=\"bg-gradient-to-br from-gray-50 to-pink-50 rounded-xl p-4 cursor-pointer hover:shadow-xl hover:scale-105 transition-all duration-300 shadow-lg relative h-48 overflow-hidden\"\n//                   onClick={(e) => {\n//                     if (!e.target.closest(\".delete-menu-button\") && !e.target.closest(\".delete-menu\")) {\n//                       handleBlogClick(blog._id);\n//                     }\n//                   }}\n//                 >\n//                   <div className=\"flex justify-between items-start h-full flex-col\">\n//                     <div className=\"flex-1 w-full overflow-hidden\">\n//                       <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{blog.title || \"Untitled Blog\"}</h3>\n//                       <p className=\"text-gray-600 text-xs mt-1 line-clamp-2\">{blog.content || \"No content\"}</p>\n//                     </div>\n//                     {blog.fileUrl && blog.fileUrl.match(/\\.(jpeg|jpg|png)$/i) && (\n//                       <img\n//                         src={`${BACKEND_BASE_URL}${blog.fileUrl}`}\n//                         alt=\"Blog"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}